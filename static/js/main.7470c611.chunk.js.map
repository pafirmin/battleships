{"version":3,"sources":["components/Ship.js","components/GridSquare.js","components/GameBoard.js","components/PlayerShips.js","components/ShipYard.js","components/StartButton.js","Computer.js","App.js","reportWebVitals.js","index.js"],"names":["Ship","coordsArr","isRotated","coords","rotated","hitPoints","length","hit","isSunk","horizontal","GridSquare","props","recieveHit","isShip","placeShip","player","currentPlayer","ship","gameStarted","useState","clicked","setClicked","style","setStyle","icon","setIcon","useEffect","makeShot","className","switchPlayer","onClick","onDrop","e","preventDefault","data","dataTransfer","getData","drop","onDragOver","allowDrop","data-clicked","GameBoard","setBoardReady","setGameWon","ships","setShips","addRandomShips","every","shipData","JSON","parse","coordArr","getCoordArray","validateShip","addShip","document","getElementById","id","remove","x","y","i","size","push","offsetX","offsetY","shipArr","forEach","generateShip","Math","random","startingCoord","floor","_","inRange","rotation","currentState","some","coord","isEqual","findShip","arr","children","j","createGrid","PlayerShips","shipId","draggable","data-size","onDragStart","classList","target","scale","stringify","dataset","clientY","getBoundingClientRect","top","clientX","left","setData","drag","onDragEnd","parentNode","transform","handleClick","createShip","ShipYard","map","StartButton","btnClass","startGame","text","ComputerPlayer","isSearching","lockedOn","initialHit","lastHitIndex","consecutiveHits","targetIndex","modifier","findTarget","targets","querySelectorAll","validNeighbours","getValidNeighbours","reverseMod","index","contains","isValid","findRandomTarget","sample","filter","isEmpty","indexOf","takeTurn","click","setTimeout","App","setCurrentPlayer","Computer","setGameStarted","boardReady","setText","setBtnClass","display","gameWon","refresh","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7470c611.chunk.js","sourcesContent":["const Ship = (coordsArr, isRotated) => {\n  const coords = coordsArr;\n  const rotated = isRotated;\n  let hitPoints = coordsArr.length;\n\n  const hit = () => {\n    hitPoints--;\n  };\n  const isSunk = () => {\n    return hitPoints === 0;\n  };\n  const horizontal = () => {\n    return rotated;\n  };\n\n  return { hit, isSunk, coords, horizontal };\n};\n\nexport default Ship;\n","import React, { useEffect, useState } from \"react\";\n\nconst GridSquare = (props) => {\n  const {\n    coords,\n    recieveHit,\n    isShip,\n    placeShip,\n    player,\n    currentPlayer,\n    ship,\n    gameStarted,\n  } = props;\n  const [clicked, setClicked] = useState(false);\n  const [style, setStyle] = useState(\"clear\");\n  const [icon, setIcon] = useState(\"\");\n\n  useEffect(() => {\n    if (isShip && player === \"player\") {\n      setStyle(ship.horizontal() ? \"ship horizontal\" : \"ship\");\n    }\n  }, [isShip, player, ship]);\n\n  useEffect(() => {\n    if (isShip && ship.isSunk()) {\n      setStyle(\"sunk\");\n    }\n  });\n\n  const handleClick = () => {\n    if (!clicked && gameStarted && currentPlayer !== player) {\n      setClicked(true);\n      makeShot();\n    }\n  };\n\n  const makeShot = () => {\n    if (isShip) {\n      recieveHit(coords);\n      setStyle(ship.horizontal() ? \"ship hit horizontal\" : \"ship hit\");\n      setIcon(<i className=\"fas fa-crosshairs\"></i>);\n    } else {\n      props.switchPlayer();\n      setIcon(<i className=\"fas fa-times\"></i>);\n    }\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const drop = (e) => {\n    if (player === \"player\") {\n      e.preventDefault();\n      var data = e.dataTransfer.getData(\"text\");\n      placeShip(coords, data);\n    }\n  };\n\n  return (\n    <div\n      onClick={() => handleClick()}\n      className={`grid-square ${style} ${player}`}\n      onDrop={(e) => drop(e)}\n      onDragOver={(e) => allowDrop(e)}\n      data-clicked={clicked}\n    >\n      {icon}\n    </div>\n  );\n};\n\nexport default GridSquare;\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport Ship from \"./Ship\";\nimport GridSquare from \"./GridSquare\";\n\nconst GameBoard = (props) => {\n  const { gameStarted, setBoardReady, setGameWon, player } = props;\n  const [ships, setShips] = useState([]);\n\n  useEffect(() => {\n    if (gameStarted && player === \"computer\") {\n      addRandomShips();\n    }\n  }, [gameStarted]);\n\n  useEffect(() => {\n    if (ships.length && ships.every((ship) => ship.isSunk())) {\n      setGameWon(true);\n    }\n  }, [ships, gameStarted, setGameWon]);\n\n  useEffect(() => {\n    ships.length === 10 && setBoardReady(true);\n  }, [ships, setBoardReady]);\n\n  const placeShip = (coords, data) => {\n    const shipData = JSON.parse(data);\n    const coordArr = getCoordArray(coords, shipData);\n\n    if (validateShip(coordArr)) {\n      addShip(coordArr, shipData.rotated);\n      document.getElementById(shipData.id).remove();\n    }\n  };\n\n  const getCoordArray = ([x, y], shipData) => {\n    const coordArr = [];\n\n    if (shipData.rotated) {\n      for (let i = 0; i < shipData.size; i++) {\n        coordArr.push([x + (i - shipData.offsetX), y]);\n      }\n    } else {\n      for (let i = 0; i < shipData.size; i++) {\n        coordArr.push([x, y + (i - shipData.offsetY)]);\n      }\n    }\n    return coordArr;\n  };\n\n  const addRandomShips = () => {\n    const shipSizes = [6, 4, 4, 3, 3, 3, 2, 2, 2, 2];\n    let shipArr = [];\n\n    shipSizes.forEach((size) => {\n      let coordArr = generateShip(size);\n      while (!validateShip(coordArr, shipArr)) {\n        coordArr = generateShip(size);\n      }\n      shipArr.push(Ship(coordArr));\n    });\n    setShips(shipArr);\n  };\n\n  const generateShip = (size) => {\n    const rotated = Math.random() > 0.5;\n    const startingCoord = [\n      Math.floor(Math.random() * 10),\n      Math.floor(Math.random() * 10),\n    ];\n    const shipData = {\n      size: size,\n      offsetX: 0,\n      offsetY: 0,\n      rotated: rotated,\n    };\n    const coordArray = getCoordArray(startingCoord, shipData);\n\n    return coordArray;\n  };\n\n  const validateShip = (coordArr, shipArr = ships) => {\n    return coordArr.every(\n      ([x, y]) =>\n        _.inRange(x, 0, 10) && _.inRange(y, 0, 10) && !isShip([x, y], shipArr)\n    );\n  };\n\n  const addShip = (coordArr, rotation) => {\n    const ship = Ship(coordArr, rotation);\n    setShips((currentState) => {\n      return [...currentState, ship];\n    });\n  };\n\n  const isShip = (coords, shipArr = ships) => {\n    return shipArr.some((ship) =>\n      ship.coords.some((coord) => _.isEqual(coord, coords))\n    );\n  };\n\n  const findShip = (coords) => {\n    for (const ship of ships) {\n      if (ship.coords.some((coord) => _.isEqual(coord, coords))) {\n        return ship;\n      }\n    }\n  };\n\n  const recieveHit = (coords) => {\n    const ship = findShip(coords);\n    ship.hit();\n\n    const arr = [...ships];\n    setShips(arr);\n  };\n\n  const createGrid = () => {\n    let children = [];\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        children.push(\n          <GridSquare\n            recieveHit={recieveHit}\n            coords={[j, i]}\n            isShip={isShip([j, i])}\n            ship={findShip([j, i])}\n            placeShip={placeShip}\n            player={props.player}\n            switchPlayer={props.switchPlayer}\n            currentPlayer={props.currentPlayer}\n            gameStarted={props.gameStarted}\n          />\n        );\n      }\n    }\n    return children;\n  };\n\n  return (\n    <div className={`game-board ${props.player}-board`}>{createGrid()}</div>\n  );\n};\n\nexport default GameBoard;\n","import React from \"react\";\n\nconst PlayerShips = (props) => {\n  let rotated = false;\n\n  function drag(e) {\n    document.getElementById(\"ships-instruct\").classList.remove(\"blink\");\n    e.target.style.scale = \"1\";\n    const data = JSON.stringify({\n      size: e.target.dataset.size,\n      offsetY: Math.floor(\n        (e.clientY - e.target.getBoundingClientRect().top) / 50 // Calculate the position of the player's cursor on the ship\n      ),\n      offsetX: Math.floor(\n        (e.clientX - e.target.getBoundingClientRect().left) / 50\n      ),\n      rotated: rotated,\n      id: props.shipId,\n    });\n    e.dataTransfer.setData(\"text\", data);\n  }\n\n  const handleClick = (e) => {\n    if (!rotated) {\n      e.target.parentNode.style.transform = \"rotate(90deg)\";\n    } else {\n      e.target.parentNode.style.transform = \"\";\n    }\n    rotated = !rotated;\n  };\n\n  const createShip = () => {\n    let children = [];\n    for (let i = 0; i < props.size; i++) {\n      children.push(<div className=\"ship-square\" key={i} />);\n    }\n    return children;\n  };\n\n  return (\n    <div\n      className=\"player-ship\"\n      id={props.shipId}\n      draggable=\"true\"\n      data-size={props.size}\n      onDragStart={(e) => drag(e)}\n      onDragEnd={(e) => (e.target.style.scale = \".5\")}\n      onClick={(e) => handleClick(e)}\n    >\n      {createShip()}\n    </div>\n  );\n};\n\nexport default PlayerShips;\n","import React from \"react\";\nimport PlayerShip from \"./PlayerShips\";\n\nconst ShipYard = () => {\n  const fleet = [6, 4, 4, 3, 3, 3, 2, 2, 2, 2];\n\n  return (\n    <div className=\"ships-container\">\n      <span id=\"ships-instruct\" className=\"blink\">\n        CLICK TO ROTATE, DRAG TO DEPLOY\n      </span>\n      <div className=\"ship-yard\" id=\"shipYard\">\n        {fleet.map((size, i) => {\n          return <PlayerShip size={size} shipId={`ship-${i}`} key={i} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ShipYard;\n","import React from \"react\";\n\nconst StartButton = (props) => {\n  return (\n    <button className={`start-btn ${props.btnClass}`} onClick={props.startGame}>\n      {props.text}\n    </button>\n  );\n};\n\nexport default StartButton;\n","import _ from \"lodash\";\n\nconst ComputerPlayer = (() => {\n  let isSearching = false;\n  let lockedOn = false;\n  let initialHit = false;\n  let lastHitIndex = false;\n  let consecutiveHits = false;\n  let targetIndex = 0;\n  let modifier = 0;\n\n  const takeTurn = () => {\n    const target = findTarget();\n    target.click();\n\n    if (target.classList.contains(\"ship\")) {\n      if (!consecutiveHits && !isSearching) {\n        initialHit = targetIndex;\n      }\n      if (isSearching) {\n        lockedOn = true;\n      }\n      lastHitIndex = targetIndex;\n      consecutiveHits++;\n      setTimeout(() => takeTurn(), 500);\n    } else if (lockedOn && consecutiveHits) {\n      isSearching = false;\n      consecutiveHits = 0;\n    } else {\n      lockedOn = false;\n      consecutiveHits = 0;\n    }\n  };\n\n  const findTarget = () => {\n    const targets = document.querySelectorAll(\".player\");\n    const validNeighbours = getValidNeighbours(targets);\n    const reverseMod = modifier - modifier * 2;\n    const isSunk = (index) => targets[index].classList.contains(\"sunk\");\n    const isValid = (index) =>\n      targets[index] && targets[index].dataset.clicked === \"false\";\n\n    if (initialHit && isSunk(initialHit)) {\n      lockedOn = false;\n    }\n    if (lockedOn) {\n      if (isValid(targetIndex + modifier) && consecutiveHits) {\n        targetIndex += modifier;\n      } else if (isValid(initialHit + reverseMod)) {\n        modifier = reverseMod;\n        targetIndex = initialHit + modifier;\n      } else {\n        targetIndex = findRandomTarget(targets);\n      }\n    } else {\n      if (lastHitIndex && validNeighbours && !isSunk(lastHitIndex)) {\n        isSearching = true;\n        modifier = _.sample(validNeighbours);\n        targetIndex = lastHitIndex + modifier;\n      } else {\n        targetIndex = findRandomTarget(targets);\n      }\n    }\n    return targets[targetIndex];\n  };\n\n  const getValidNeighbours = (targets) => {\n    const neighbours = [-10, 10, -1, 1];\n    let validNeighbours = neighbours.filter((i) =>\n      targets[lastHitIndex + i] &&\n      targets[lastHitIndex + i].dataset.clicked === \"false\"\n    );\n    if (_.isEmpty(validNeighbours)) {\n      validNeighbours = false;\n    }\n    return validNeighbours;\n  };\n\n  const findRandomTarget = (targets) => {\n    lastHitIndex = consecutiveHits = isSearching = initialHit = lockedOn = false;\n    let target = _.sample(\n      [...targets].filter((i) => i.dataset.clicked === \"false\")\n    );\n\n    return [...targets].indexOf(target);\n  };\n\n  return { takeTurn };\n})();\n\nexport default ComputerPlayer;\n","import GameBoard from \"./components/GameBoard\";\nimport ShipYard from \"./components/ShipYard\";\nimport StartBtn from \"./components/StartButton\";\nimport Computer from \"./Computer\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [currentPlayer, setCurrentPlayer] = useState(\"player\");\n  const switchPlayer = () => {\n    setCurrentPlayer(currentPlayer === \"player\" ? \"computer\" : \"player\");\n  };\n\n  useEffect(() => {\n    if (currentPlayer === \"computer\") {\n      setTimeout(() => Computer.takeTurn(), 500);\n    }\n  }, [currentPlayer]);\n\n  const [gameStarted, setGameStarted] = useState(false);\n  const startGame = () => {\n    if (boardReady && !gameWon) {\n      setGameStarted(true);\n    } else if (gameWon) {\n      refresh();\n    }\n  };\n\n  const [boardReady, setBoardReady] = useState(false);\n  useEffect(() => {\n    if (boardReady) {\n      setText(\"START GAME\");\n      setBtnClass(\"blink\");\n      document.getElementById(\"ships-instruct\").style.display = \"none\";\n    }\n  }, [boardReady]);\n\n  const [btnClass, setBtnClass] = useState(\"\");\n  const [text, setText] = useState(\"DEPLOY YOUR FLEET\");\n  useEffect(() => {\n    if (gameStarted) {\n      setText(\"COMMENCE ATTACK!\");\n      setBtnClass(\"\");\n    }\n  }, [gameStarted]);\n\n  const [gameWon, setGameWon] = useState(false);\n  useEffect(() => {\n    if (gameWon) {\n      setGameStarted(false);\n      setText(currentPlayer === \"player\" ? \"YOU WIN!\" : \"COMPUTER WINS\");\n      setBtnClass(\"winMsg\");\n    }\n  }, [gameWon, currentPlayer]);\n\n  const refresh = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>BATTLESHIPS</h1>\n      </header>\n      <div className=\"boards-container\">\n        <GameBoard\n          player=\"player\"\n          switchPlayer={switchPlayer}\n          currentPlayer={currentPlayer}\n          gameStarted={gameStarted}\n          setBoardReady={setBoardReady}\n          setGameWon={setGameWon}\n        />\n        <StartBtn startGame={startGame} text={text} btnClass={btnClass} />\n        <GameBoard\n          player=\"computer\"\n          switchPlayer={switchPlayer}\n          currentPlayer={currentPlayer}\n          gameStarted={gameStarted}\n          setBoardReady={setBoardReady}\n          setGameWon={setGameWon}\n        />\n      </div>\n      <ShipYard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}